use uo;
use os;
use basic;
use cfgfile;

include "include/client";
include "include/attributes";
include "include/classes";
include "include/random";
var item_cfg := ReadConfigFile( ":*:itemdesc" );;

const TRAP   := "hiddentrap";
const POINTS := 200;

program detect_hidden( who )

	var thief  := GetObjProperty( who, CLASSEID_THIEF );

	if( !CheckSkill( who, SKILLID_DETECTINGHIDDEN, -1, POINTS ) )
		SendSysMessage( who, "You didnt find any anyone." );
		return;
	endif

		
	var range  := CInt( GetEffectiveSkill( who, SKILLID_DETECTINGHIDDEN ) / 15 );
	if( thief )
		range := CInt( range * ClasseBonus( who, CLASSEID_THIEF ) );
	endif

	var hiders := ListMobilesNearLocationEx( who.x, who.y, who.z, range, LISTEX_FLAG_HIDDEN );
	var items  := ListItemsNearLocation( who.x, who.y, who.z, range );
	var count  := 0;


	foreach mobile in hiders
		if( mobile.hidden && mobile.serial != who.serial )
			if( Found( who, mobile ) )
				mobile.hidden := 0;
				count := count + 1;
				PrintTextAbovePrivate( mobile, "You have been discovered!", mobile );
				PrintTextAbovePrivate( mobile, "Found someone!!", who );
			endif
		endif
	endforeach

	if( !count )
		SendSysMessage( who, "You didnt find any anyone." );
	endif

	var elem;
	var data;
	var prop;

	foreach item in items
		elem := FindConfigElem( item_cfg, item.objtype );
		if( elem )
			data := elem.WalkOnScript;
			prop := GetObjProperty( item, "trap_type" );
			var distanceallowed:=1; //for hiddentraptiles and pickdoors
			if (thief)
				distanceallowed:=distanceallowed+1+thief; //ie. unclassed can see these at 1 distance, level 1 at 3, level4 at 6.
			endif
			
			if (item.objtype == 0x12||item.objtype == 0x13||item.objtype == 0x14) //hidentraptile and trapped pick doors
				if ((Distance(who, item)<=distanceallowed) && CheckLineOfSight( who, item ))
					var dparams:= {who, item};
					start_script(":barnsitems:revealtraptile", dparams);//handles temporarily revealing the tile
				endif
			elseif( data == TRAP )
				if( CheckSkill( who, SKILLID_DETECTINGHIDDEN, -1, 0 ))
					PrintTextAbovePrivate( item, "Trap", who );
					SetObjProperty( item, "trapped", 1 );
				endif
				
		 	elseif( prop )
				if( CheckSkill( who, SKILLID_DETECTINGHIDDEN, -1, 0 ))
					PrintTextAbovePrivate( item, "Trapped", who );
					SetObjProperty( item, "trapped", 1 );
				endif
			endif
		endif
	endforeach

endprogram


function Found( finder, hider )

	var finder_skill := GetEffectiveSkill( finder, SKILLID_DETECTINGHIDDEN );
	var hider_skill  := GetEffectiveSkill( hider, SKILLID_HIDING );

	if( GetObjProperty( finder, CLASSEID_THIEF ) )
		finder_skill := CInt( finder_skill * ClasseBonus( finder, CLASSEID_THIEF ) );
	endif
	var hiderclass:=GetClass(hider);
	if( hiderclass==CLASSEID_THIEF || hiderclass==CLASSEID_NINJA )
		var level:=GetClasseLevel(hider);
		hider_skill := CInt( hider_skill * (1+(level * BONUS_PER_LEVEL)) );
	endif

	var chance := finder_skill - CInt( hider_skill / 2 );
	if (chance > 95)
		chance:=95;
	endif
	if( RandomDiceStr( "1d100" ) < chance )
		return 1;
	else
		return 0;
	endif

endfunction