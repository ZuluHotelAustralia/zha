use uo;
use os;

include "include/client";
include "include/objtype";

//program on_insert( who, runebook, item )
program on_insert( who, runebook, movetype, INSERT_ADD_ITEM, item )
	set_critical(1);

	if( !ReserveItem( runebook ) )
		return 0;
	endif

	case( item.objtype )

		UOBJ_RUNE:		if( AddRuneToRunebook( runebook, item ) )
						SendSysMessage( who, "The rune was successfully added to the runebook." );
						return 1;
					else
						SendSysMessage( who, "Couldn't add the rune to the runebook." );
						return 0;
					endif
					break;
	
		UOBJ_RECALL_SCROLL:	if( RechargeBook( who, runebook, item ) )
						return 0;
					else
						return 0;
					endif
					break;
				
		default:		MoveItemToContainer( item, who.backpack );
	endcase

endprogram


function AddRuneToRunebook( runebook, rune )

	set_critical(1);

	if( !ReserveItem( rune ) )
		set_critical(0);
		return 0;
	endif

	var runes_def	 := GetObjProperty( runebook, "RuneDefs" );
	if( !runes_def )
		runes_def := array;
	endif

	if( runes_def.size() >= 16 )
		set_critical(0);
		return 0;
	endif

	var tox := CInt(GetObjProperty( rune, "x" ));
	var toy := CInt(GetObjProperty( rune, "y" ));
	var toz := CInt(GetObjProperty( rune, "z" ));
	if( !tox && !toy && !toz )
		set_critical(0);
		return 0;
	endif

	var name := rune.name - "A recall rune for ";
	if( !name )
		name := "a marked recall rune";
	endif
		
	var rune_data		:= struct;
	rune_data.+tox		:= tox;
	rune_data.+toy		:= toy;
	rune_data.+toz		:= toz;
	rune_data.+name		:= name;
	rune_data.+defloc	:= 0;
	rune_data.+dtindex	:= 5;

	if( !runes_def.append(rune_data) )
		set_critical(0);
		return 0;
	endif

	if( !SetObjProperty( runebook, "RuneDefs", runes_def ) )
		set_critical(0);
		return 0;
	endif

	DestroyItem( rune );

	set_critical(0);

	return 1;

endfunction


function RechargeBook( who, runebook, scrolls )

	set_critical(1);

	var charges	 := CInt( GetObjProperty( runebook, "charges" ) );
	var maxcharges := CInt( GetObjProperty( runebook, "maxcharges" ) );
	if( !maxcharges )
		maxcharges := 5;
	endif

	var maxamount	 := CInt( maxcharges - charges );
	var amount	 := CInt( GetAmount(scrolls) );

	if( maxamount <= 0 )
		SendSysMessage( who, "This runebook is full." );
		set_critical(0);
		return 0;
	
	elseif( amount >= maxamount )
		var to_substract := maxamount;
		if( SubtractAmount( scrolls, to_substract ) )
			charges := maxcharges;
		endif
	
	elseif( DestroyItem( scrolls ) )
		charges := charges + amount;
	endif

	if( scrolls && GetAmount(scrolls) )
		MoveItemToContainer( scrolls, who.backpack,1,1 );
	endif

	PlaySoundEffect( who, 0x1f1);
	PlayObjectCenteredEffect( who, FX_SPARK_EFFECT, 7, 0x10 );
	SetObjProperty( runebook, "charges", charges );
	SendSysMessage( who, "There's now " + charges + " charges in this runebook." );

	UpdateName( runebook, charges );

	set_critical(0);
	return 1;

endfunction


function UpdateName( runebook, charges )

	set_critical(1);

	var name := GetObjProperty( runebook, "name" );
	if( !name )
		name := "Runebook";
	endif

	runebook.name := name + " [charges: " + charges + "]";

endfunction