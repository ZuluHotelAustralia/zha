// herdedai.src was created by Maximilian Scherr
use uo;
use os;
use npc;

include "include/eventid";
include "include/dist";

var npc := Self();

program herdedai()
	SetObjProperty(npc, "dont_restart_vitals", 1); // So vitals are not reset to maximum!

	EnableEvents( SYSEVENT_ENGAGED + SYSEVENT_DAMAGED );
	SetWarMode( 0 );

	herdedLoop();
  
	EraseObjProperty(npc, "loctionx");
	EraseObjProperty(npc, "loctiony");
	EraseObjProperty(npc, "originalscript");
	
	DisableEvents( SYSEVENT_ENGAGED + SYSEVENT_DAMAGED );
endprogram

function herdedLoop()
	var x := CInt(GetObjProperty(npc, "locationx"));
	var y := CInt(GetObjProperty(npc, "locationy"));
	
	var originalscript := GetObjProperty(npc, "originalscript");
	
	if ((!x) || (!y))
		return;
	endif
	
	var ev, d;
	repeat
		d := coordist(npc.x, npc.y, x, y);
		
		ev := wait_for_event(0.1);
		case (ev.type)
			SYSEVENT_ENGAGED:
			SYSEVENT_DAMAGED:
						npc.script := originalscript;
						RestartScript(npc);
						SendEvent(npc, ev);
						return;
		endcase
		
		RunTowardLocation(x, y);
	until (d<=2);
	
	npc.script := originalscript;
	RestartScript(npc);
endfunction