use os;
use uo;

include "include/objtype";
include "include/spelldata";
include "include/areas";
include "include/client";
include "../pkg/std/housing/utility";

program spell_gate( caster )
	//ppl were exploiting this by casting gate, .suicide, running thru house doors
	//to stop it firstly grabs the players coords... so that any time delay is not important
	//then later makes sure they havent moved
	var fromx := caster.x;
	var fromy := caster.y;
	var fromz := caster.z;
	
	var circle := 7;

	if( IsForbiddenAreaToGateFrom( caster ) )
		SendSysMessage( caster, "You can't gate from there." );
		return 0;
	endif

	if( caster.multi )
		if( !IsOwner( caster, caster.multi )  )
			if( !IsFriend( caster, caster.multi ) )
				SendSysMessage( caster, "You can't gate from this house." );
				return;
			endif
		endif
	endif
	

	SendSysMessage( caster, "Select a rune to gate from." );
	var cast_on := CanTargetThing(caster, circle, TGTOPT_CHECK_LOS );
	if (!cast_on)
		return;
	elseif( !Accessible( caster, cast_on ) )
		SendSysMessage( caster, "You can't reach that." );
		return 0;
	elseif( cast_on.objtype == 5355)
		var params := {caster, cast_on};
		start_script(":specialmaps:unleashmap", params);
		return 0;
	elseif( cast_on.objtype != UOBJ_RUNE && cast_on.objtype != 0x6100 )
		SendSysMessage( caster, "You can only cast that on a recall rune or a runebook!" );
		return 0;
	elseif( !ReserveItem( cast_on ) )
		return 0;
	endif

	var tox := CInt(GetObjProperty( cast_on, "x" ));
	var toy := CInt(GetObjProperty( cast_on, "y" ));
	var toz := CInt(GetObjProperty( cast_on, "z" ));

	if( !tox && !toy && !toz )
		SendSysMessage(caster, "That is a blank rune!");
		return;
	endif

	if( IsForbiddenAreaToGateTo( caster, tox, toy ) )
		SendSysMessage(caster, "The destination is a magic place with protection.");
		if( cast_on.objtype != 0x6100 )
			DestroyItem( cast_on );
		endif
		return;
	endif

	var multi := GetStandingHeight( tox, toy, toz ).multi;
	if( multi )
		if( !IsOwner( caster, multi )  )
			if( !IsFriend( caster, multi ) )
				SendSysMessage( caster, "You can't gate to this house." );
				return;
			endif
		endif
	endif

	set_critical(1);

	if( !caster )
		return;
	endif
	
	if (caster.x!=fromx||caster.y!=fromy)
		SendSysMessage( caster, "You have moved. The gate spell has been disrupted." );
		return;
	endif

	var gate1 := CreateItemAtLocation( fromx, fromy, fromz, UOBJ_BLUE_MOONGATE, 1 );
	var gate2 := CreateItemAtLocation( tox, toy, toz, UOBJ_BLUE_MOONGATE, 1 );
	if( !gate1 || !gate2 || !caster )
		DestroyItem(gate1);
		DestroyItem(gate2);
        	return;
	endif

	gate1.movable := 0;
	gate2.movable := 0;

	SetObjProperty( gate1, "GateDestX", gate2.x );
	SetObjProperty( gate1, "GateDestY", gate2.y );
	SetObjProperty( gate1, "GateDestZ", gate2.z );
	SetObjProperty( gate1, "f", 1);
	SetObjProperty( gate1, "gateHasWarnings", 1);
	SetObjProperty( gate2, "GateDestX", gate1.x );
	SetObjProperty( gate2, "GateDestY", gate1.y );
	SetObjProperty( gate2, "GateDestZ", gate1.z );
	SetObjProperty( gate2, "f", 1);
	SetObjProperty( gate2, "gateHasWarnings", 1);

	ReleaseItem(cast_on);
	Detach();

	set_critical(0);

	PlaySoundEffect( caster, SFX_SPELL_GATE_TRAVEL );

	sleep(30);
   
	set_critical(1);
	DestroyItem(gate1);
	DestroyItem(gate2);
	set_critical(0);

endprogram