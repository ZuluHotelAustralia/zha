use uo;
use os;

include "include/spelldata";
include "include/attributes";
include "include/recalling";
include "include/objtype";
include "include/client";
include "../pkg/std/housing/utility";
include "include/statichouses";

program cast_earth_portal( caster )

	var circle := GetCircle( SPELLID_EARTH_PORTAL );
	var duration := CInt(GetEffectiveSkill( caster, SKILLID_MAGERY ) / 2);
	var casterinstatic := IsInStaticHouse( caster.x, caster.y, caster.z );

 	if( TryToCast( caster, SPELLID_EARTH_PORTAL ) != SUCCESS )
 		EraseObjProperty(caster, "#Casting");
		return;
	endif

	if( casterinstatic )
		if( !IsStaticOwner( caster, casterinstatic )  )
			if( !IsStaticCoowner( caster, casterinstatic ) )
				if( !IsStaticFriend( caster, casterinstatic ) )
						SendSysMessage( caster, "You can't gate in this house." );
				return;
				endif
			endif
		endif
	endif
	if( caster.multi )
		if( !IsOwner( caster, caster.multi )  )
			if( !IsFriend( caster, caster.multi ) )
				SendSysMessage( caster, "You can't gate from this house." );
				EraseObjProperty(caster, "#Casting");
				return;
			endif
		endif
	endif

	if( !CheckPoz( caster.x, caster.y ) )
		SendSysMessage( caster, "You can't gate out of this place.");
		EraseObjProperty( caster, "#Casting" );
		return;
	endif

	SendSysMessage( caster, "Select a rune to gate from." );

	var cast_on := CanTargetThing( caster, circle, TGTOPT_CHECK_LOS );

	if(!cast_on)
		EraseObjProperty( caster, "#Casting" );
		return;
	endif

	if( !Accessible( caster, cast_on ) )
		SendSysMessage( caster, "You can't reach that!" );
		EraseObjProperty( caster, "#Casting" );
		return;
	endif

	if( cast_on.objtype != UOBJ_RUNE && cast_on.objtype != 0x6100 )
		SendSysMessage( caster, "You can only cast that on a recall rune!" );
		EraseObjProperty( caster, "#Casting" );
		return;
	endif

	if( !ReserveItem(cast_on) )
		EraseObjProperty( caster, "#Casting" );
		return;
	endif

	var tox := CInt(GetObjProperty( cast_on, "x" ));
	var toy := CInt(GetObjProperty( cast_on, "y" ));
	var toz := CInt(GetObjProperty( cast_on, "z" ));
	var casttostatic := IsInStaticHouse( tox, toy, toz );

	if( casttostatic )
		if( !IsStaticOwner( caster, casttostatic )  )
			if( !IsStaticCoowner( caster, casttostatic ) )
				if( !IsStaticFriend( caster, casttostatic ) )
						SendSysMessage( caster, "You cannot gate to this house." );
				return;
				endif
			endif
		endif
	endif
	if( !tox && !toy && !toz )
		SendSysMessage(caster, "That is a blank rune!");
		EraseObjProperty( caster, "#Casting" );
		return;
	endif

	if( !CheckPoz( tox, toy ) )
		SendSysMessage( caster, "The destination is a magic place with protection.");
		DestroyItem( cast_on );
		EraseObjProperty( caster, "#Casting" );
		return;
	endif

	if( IsForbiddenAreaToRecallTo( caster, tox, toy ) )
		SendSysMessage( caster, "The destination is a magic place with protection.");
		DestroyItem( cast_on );
		EraseObjProperty( caster, "#Casting" );
		return;
	endif

	set_critical( 1 );

	var gate1 := CreateItemAtLocation( caster.x, caster.y, caster.z, UOBJ_BLACK_MOONGATE, 1 );
	var gate2 := CreateItemAtLocation( tox, toy, toz, UOBJ_BLACK_MOONGATE, 1 );
	gate1.movable := 0;
	gate2.movable := 0;

	if( gate2.multi )
		if( !IsOwner( caster, gate2.multi )  )
			if( !IsFriend( caster, gate2.multi ) )
				SendSysMessage( caster, "You can't gate to this house." );
				DestroyItem(gate2);
			endif
		endif
	endif

	if( !gate1 )
		DestroyItem( gate2 );
		EraseObjProperty( caster, "#Casting" );
        	return;
	endif

	if( !gate2 )
		DestroyItem( gate1 );
		EraseObjProperty( caster, "#Casting" );
		return;
	endif

	SetObjProperty( gate1, "GateDestX", gate2.x );
	SetObjProperty( gate1, "GateDestY", gate2.y );
	SetObjProperty( gate1, "GateDestZ", gate2.z );
	SetObjProperty( gate1, "f", 1);
	SetObjProperty( gate2, "f", 1);
	SetObjProperty( gate2, "GateDestX", gate1.x );
	SetObjProperty( gate2, "GateDestY", gate1.y );
	SetObjProperty( gate2, "GateDestZ", gate1.z );
	SetObjProperty( gate1, "gateHasWarnings", 1);
	SetObjProperty( gate2, "gateHasWarnings", 1);
	Detach();

	set_critical( 0 );

	PlaySoundEffect( caster, SFX_SPELL_EARTH_PORTAL );
	EraseObjProperty( caster, "#Casting" );

	sleep( duration );
   
	set_critical( 1 );

	DestroyItem( gate1 );
	DestroyItem( gate2 );

	set_critical(0);

endprogram