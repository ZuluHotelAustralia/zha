use uo;
use basic;

include "include/attributes";
include "include/gumps";
include ":zuluitems:pickclass";

const EFFECT_BLUE_SPARKLE  := 0x373a;
var startloc := {
        {4407,	1045,	0},		// moonglow Docks
    	{1475,	1645,	20},		// britain bridge
    	{1492,	3696,	0},		// jhelom
        {535,	992,	0},		// yew Town Center
    	{2539,	501,	30},		// minoc East Bridge
    	{1832,	2779,	0},	// trinsic West Gate
    	{639,	2236,	0},		// skara Docks
    	{3675,	2259,	20},	// magincia Docks
	{3006,	826,	0}	// Vesper Docks
    };

var layout := {
	"page 0",
	"gumppic 30 30 5528",
	"text 150 40 1153 0",

	"text 235 75 1153 1",
	"button 165 75 247 248 1 0 2",

	"text 235 100 1153 3",
	"button 165 100 247 248 1 0 4",

	"text 235 125 1153 5",
	"button 165 125 247 248 1 0 6",

	"text 235 150 1153 7",
	"button 165 150 247 248 1 0 8",

	"text 235 175 1153 9",
	"button 165 175 247 248 1 0 10",

	"text 235 200 1153 11",
	"button 165 200 247 248 1 0 12",

	"text 235 225 1153 13",
	"button 165 225 247 248 1 0 14",

	"text 235 250 1153 15",
	"button 165 250 247 248 1 0 16",

	"text 235 275 1153 17",
	"button 165 275 247 248 1 0 18"

};

var data := {
	"Choose your starting location",
	"Moonglow",
	"",
	"Britain",
	"",
	"Jhelom",
	"",
	"Yew",
	"",
	"Minoc",
	"",
	"Trinsic",
	"",
	"Skara Brae",
	"",
	"Magincia",
	"",
	"Vesper"
};
program walkon_racegate(who, me)

var racepicked := who.title_race;

	if ( who.cmdlevel==0) 
		if (CheckName(who.name))
			SendSysMessage(who, "You are not allowed to play with a name which can identifies a member of Staff. You have to change it.",3,33);

			foreach mobile in EnumerateOnlineCharacters()
				if( mobile.cmdlevel )
					SendSysMessage( mobile,	who.name + ", account: " + who.acctname + ", chooses an unacceptable name.",3,33 );
				endif
			endforeach

			return;
		endif
	endif	
	if (racepicked)
		SendSysMessage(who, "You are already a " + racepicked);
		return;
	endif
	var racename :=GetObjProperty(me, "racename");
	if (!GetRaceConfirmationGump(who, racename))
		SendSysMessage(who, "Cancelled");
		return;
	endif

	if(who.acctname)
	 PlayObjectCenteredEffect( who, EFFECT_BLUE_SPARKLE, 10,10);

	var newcolor := GetObjProperty(me, "color");
	var sound := GetObjProperty(me, "sound");
	

	who.title_race := racename;

	/*
	if ( YesNo(who, "Add race in name?") )
	who.name := who.name + " the " + racename;
	endif
	*/

	if (sound)
	        PlaySoundEffect(who, sound);
	endif

	if (newcolor)
	        who.color := newcolor;
	        who.truecolor := newcolor;
	endif
	SendSysMessage(who, "You are now the race of " + racename + ".");
	endif
	


//	EraseObjProperty(who,"newbie");
	


				SetBaseStrength(who,90);
        SetBaseIntelligence(who,90);
        SetBaseDexterity(who,90);
sendclassgump(who, "Home");
//MOVE TO WIND STARTING POINT
	var start_pos:=GetGlobalProperty("starting_position");
		
	if (start_pos)
		start_pos := SplitWords(start_pos);
		movecharactertolocation(who, Cint(start_pos[1]), Cint(start_pos[2]), Cint(start_pos[3]),MOVECHAR_FORCELOCATION);
	else
		movecharactertolocation(who, 5149, 59, 25, MOVECHAR_FORCELOCATION);
	endif
//SendGateGump(who);

endprogram


function CheckName(testname)

	var name:=upper(testname);
	if (name["GM"])
		return 1;
	elseif (name["SCRIPTER"])
		return 1;
	elseif (name["ADMIN"])
		return 1;
	elseif (name["ADMINISTRATOR"])
		return 1;
	elseif (name["SEER"])
		return 1;
	elseif (name["DEVELOPER"])
		return 1;
	elseif (name["COUNSELOR"])
		return 1;
	elseif (name["COUNS"])
		return 1;
	endif
	return 0;

endfunction

function SendGateGump(who)
	var x:=0;
	var y:=0;
	var z:=0;
	var res := SendDialogGump( who, layout, data );

	case( res[0] )

		2: x:=startloc[1][1];
                   y:=startloc[1][2];
                   z:=startloc[1][3];

		4: x:=startloc[2][1];
                   y:=startloc[2][2];
                   z:=startloc[2][3];

		6: x:=startloc[3][1];
                   y:=startloc[3][2];
                   z:=startloc[3][3];

		8: x:=startloc[4][1];
                   y:=startloc[4][2];
                   z:=startloc[4][3];

		10: x:=startloc[5][1];
                   y:=startloc[5][2];
                   z:=startloc[5][3];

		12:x:=startloc[6][1];
                   y:=startloc[6][2];
                   z:=startloc[6][3];

		14:x:=startloc[7][1];
                   y:=startloc[7][2];
                   z:=startloc[7][3];

		16:x:=startloc[8][1];
                   y:=startloc[8][2];
                   z:=startloc[8][3];

		18:x:=startloc[9][1];
                   y:=startloc[9][2];
                   z:=startloc[9][3];

	endcase

	if(res[0])
		MoveCharacterToLocation(who, x, y, z, MOVECHAR_FORCELOCATION);

	else
		MoveCharacterToLocation(who, 1475, 1645, 20, MOVECHAR_FORCELOCATION);
	endif

endfunction

function getDescriptionForRaceName(racename)
	racename:=lower(racename);
	case(racename)
		"human":
			return "Humans receive +1 Enchantment Slot per level.";
		"elf":
			return "Elves receive 1 Air Protection per 2 levels.";
		"dark-elf":
			return "Dark-Elves receive 1 WaterProtection per 2 levels.";
		"goblin":
			return "Goblins receive 1 Poison Protection per level.";
		"barbarian":
			return "Barbarians receive 1 Physical Protection per 2 levels.";
		"dwarf":
			return "Dwarves receive 1 Earth Protection per 2 levels.";
		"demon":
			return "Demons receive 1 Fire Protection per 2 levels.";
		"vampire":
			return "Vampires receive 1 Necromantic Protection per 2 levels.";
	endcase
endfunction

function getRestrictionsForRaceName(racename)
	racename:=lower(racename);
	case(racename)
		"human":
			return "They can be of any class.";
		"elf":
			return "Elves cannot be a Deathknight or Necromancer.";
		"dark-elf":
			return "Dark-Elves cannot be a Priest or Paladin.";
		"goblin":
			return "Goblins cannot be a Monk or Paladin.";
		"barbarian":
			return "Barbarians cannot be a Mage or Ninja.";
		"dwarf":
			return "Dwarves cannot be a Mage or Necromancer.";
		"demon":
			return "Demons cannot be either a Priest or Paladin.";
		"vampire":
			return "Vampires cannot be either a Priest or Paladin.";
	endcase
endfunction

function GetRaceConfirmationGump(who, racename)
	who.paralyzed:=1;
	const gumpx:=100;
	const gumpy:=100;
	GFInitGump();
	GFPage(1);
	GFResizePic(gumpx, gumpy, BKGND_GOLDTRIM, 400, 180);
	var myname := who.name;
	if (who.title_suffix)
		myname := myname + who.title_suffix;
	endif
	//GFTextLine(gumpx+40, gumpy+10, 53, Upper(racename) + " RACE GATE");
	GFTextMid(gumpx+40, gumpy+10, 400, 53, Upper(racename) + " RACE GATE");
	GFTextLine(gumpx+40, gumpy+40, 70, getDescriptionForRaceName(racename));
	GFTextLine(gumpx+40, gumpy+70, 70, getRestrictionsForRaceName(racename));

	
	//GFTextLine(gumpx+40, gumpy+90, 5, "WALK THROUGH"); GFTextLine(gumpx+190, gumpy+90, 5, "CANCEL");

	var okButton := GFButtonID( gumpx+110, gumpy+115, G_BUTTON_OKAY_0, G_BUTTON_OKAY_1, 1 );
	var closeButton := GFButtonID( gumpx+240, gumpy+115, G_BUTTON_CANCEL_0, G_BUTTON_CANCEL_1, 1 );
	var choice := GFSendGump(who);
	
	var counter:=0;
	who.paralyzed:=0;
	if (choice[okButton.keyid])
		
		return 1;
	
		
	endif
	return 0;


endfunction