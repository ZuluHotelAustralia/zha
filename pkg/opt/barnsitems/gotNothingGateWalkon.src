use os;
use uo;
use basic;
include "include/speedhackRecallCheck";
include "include/dotempmods";
include "include/gumps";
include "include/res";
include "include/dismount";
include "include/utility";

program gotNothingGateWalkon( who, moongate )
	 var teleLocation:=GetObjProperty(moongate, "MoveToLocation");
	 if (!teleLocation)
		return;
	 endif
	
	if (!ReserveItem(moongate))
		SendSysMessage(who, "Someone is already using this gate.",3,53);
		return 0;
	endif

	who.frozen := 1;
	SetObjProperty( who, "frozen", 1 ); 
	
	 if (! AgreementGump(who))
	 	SendSysMessage(who, "Cancelled.");
		who.frozen := 0;
		EraseObjProperty( who, "frozen");
		return;
	 endif
	
	
	 teleLocation := SplitWords(teleLocation);
    var tox := Cint(teleLocation[1]);
    var toy := Cint(teleLocation[2]); 
    var toz := Cint(teleLocation[3]);
	 
	 Dismount(who);
	 
	 //first check to see whether an item cant be unequipped
	 foreach item in ListEquippedItems( who )
	 	if (GetObjProperty( item, "StayEquipped" ))
		 	SendSysMessage(who, "You are holding an item that can't be unequipped. Remove it and try again.");
			who.frozen := 0;
			EraseObjProperty( who, "frozen");
			return;
		endif
	 endforeach
	 
	
	 //move equipped items to pack 
	 foreach item in ListEquippedItems( who )
		if (item.objtype < 0x203b  || item.objtype > 0x20d4) // not hair or bears
			MoveItemToContainer( item, who.backpack);
		endif 
	endforeach
	
	 //find bank
	 var bankbox := FindBankBox( who );	
	 if( !bankbox )	
		SendSysMessage(who, "Could not access bank box. Cancelled.");
		who.frozen := 0;
		EraseObjProperty( who, "frozen");
		return;
	 endif
	
	//first move newbied items to container (else all scrolls spill out of spell books :) )
	foreach item in EnumerateItemsInContainer( who.backpack )
		if( item.newbie )
			if (!MoveItemToContainer(item, bankbox))
	 			SendSysMessage(who, "Could not move item to bank box. Cancelled.");	
				who.frozen := 0;
				EraseObjProperty( who, "frozen");
				return;
			endif 
		endif
	endforeach

	
	//then containers
	foreach item in EnumerateItemsInContainer( who.backpack )
		if( item.IsA(POLCLASS_CONTAINER) && item.container == who.backpack)
			if (!MoveItemToContainer(item, bankbox))
	 			SendSysMessage(who, "Could not move item to bank box. Cancelled.");	
				who.frozen := 0;
				EraseObjProperty( who, "frozen");
				return;
			endif 
		endif
	endforeach
		
	//then move rest
	foreach item in EnumerateItemsInContainer( who.backpack )
		if (!MoveItemToContainer(item, bankbox))
 			SendSysMessage(who, "Could not move item to bank box. Cancelled.");	
			who.frozen := 0;
			EraseObjProperty( who, "frozen");
			return;
		endif 
	endforeach	

	
	 //freezing totem 
		var totemser:=CInt(GetObjProperty( who, "humuc")); 
		if (totemser)
			var totem:=SystemFindObjectBySerial(totemser);
			if (totem)
				totem.hidden:=1;
				RevokePrivilege( totem, "invul" );
				SetObjProperty( totem, "guardkill", 1);
				ApplyRawDamage(totem, CInt(GetHp(totem)+3) );
		 	 	PrintTextAbovePrivate(who, "Your totem has been killed.", who);
			endif
		endif	

	 var mobface;

    mobface := who.facing + 6;

    if (mobface > 8)
       mobface := mobface - 8;
    endif
	 
	 //kill mount and followers
	 var mobs := ListMobilesNearLocation( who.x, who.y, who.z, 8 );
	 foreach mob in mobs
		var mob_template := mob.npctemplate;
		if( (mob.script == "tamed") && ( GetObjProperty( mob, "master" ) == who.serial ) )
			mob.hidden:=1;
			SetObjProperty(mob, "nocorpse", 1);
			ApplyRawDamage(mob, CInt(GetHp(mob)+3) );
		endif
	endforeach

	 SetObjProperty(who, "goneThruGotNothing", 1);
    //kill
    ApplyRawDamage(who, CInt(GetHp(who)+3) );    
	
    //transport
    set_critical(1); 
    SetObjProperty(who,"#moved", 1);
    if (!MoveObjectToLocation( who, tox, toy, toz))
		who.frozen := 0;
		EraseObjProperty( who, "frozen");
		EraseObjProperty(who, "goneThruGotNothing");
	 	return;
	 endif

    SetSpeedCheckNote(who);
	 
	 //post movement stuff
	
	 //res
	 ResurrectMobile( who );

	//destroy corpse
	foreach corpse in ListItemsNearLocationOfType( moongate.x, moongate.y, moongate.z, 1, 8198 ) 
		if (GetObjProperty(corpse, "goneThruGotNothing"))
			DestroyItem(corpse);
		endif
	endforeach
	EraseObjProperty(who, "goneThruGotNothing");
			
	 //set all mods 0
	//dispel spell effects
	 //SetStrengthMod(who, 0);
	 //SetIntelligenceMod(who, 0);
	 //SetDexterityMod(who, 0);
	 WipeMods( who );
	 if( who.graphic != who.trueobjtype && !who.dead )
		who.graphic := who.trueobjtype;
	 endif	 
	
	//easier doing this here cos animals which follow will auto come after teleport
	sleep(3);
	mobs := ListMobilesNearLocation( who.x, who.y, who.z, 8 );
	foreach mob in mobs
		var mob_template := mob.npctemplate;
		if( (mob.script == "tamed" || mob.script == "playermerchant") && ( GetObjProperty( mob, "master" ) == who.serial ) )
			mob.hidden:=1;
			RevokePrivilege( mob, "invul" );
			SetObjProperty( mob, "guardkill", 1);
			ApplyRawDamage(mob, CInt(GetHp(mob)+3) );
		endif
	endforeach
	who.frozen := 0;
	EraseObjProperty( who, "frozen");

	PlaySoundEffect(who, 0x217);
endprogram

function AgreementGump(who)

	GFInitGump();
	GFPage(1);
	GFResizePic(0, 0, BKGND_SCROLL, 640, 280);
	
	
	GFTextMid(10, 10, 440, 53, "NO ITEMS OR FOLLOWERS GATE");
	
	GFTextLine(30, 40, 43, "WARNING! You are about to enter a NO ITEMS OR FOLLOWERS GATE");
	GFTextLine(30, 70, 53, "If you select YES the following will happen -");
	GFTextLine(50, 100, 63,"ALL of your equipped items will be moved to your bank box");
	GFTextLine(50, 130, 63, "ALL items in your backpack will be moved to your bank box");
	GFTextLine(50, 160, 63, "ALL tamed creatures will be killed");
	GFTextLine(50, 190, 63,"Your totem will be KILLED!");
	GFTextLine(30, 220, 53,"After that you will be moved through the gate");
	
	
	GFTextLine(90, 250, 53, "YES");
	GFTextLine(200, 250, 53, "NO");

	var yesButton := GFButtonID( 60, 255, G_BLUE_SMALL_CIRCLE_0, G_BLUE_SMALL_CIRCLE_1, 1 );
	var noButton := GFButtonID( 170, 255, G_BLUE_SMALL_CIRCLE_0, G_BLUE_SMALL_CIRCLE_1, 1 );

	var choice := GFSendGump(who);

	if(choice[yesButton.keyid])
		return 1;
	elseif(choice[noButton.keyid])
		return 0;
	endif
endfunction
