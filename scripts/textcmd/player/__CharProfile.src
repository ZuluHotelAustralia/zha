use uo;
use basic;
include "include/gumps";

var CONCEALEDFIXPASSWORD := "Barns987612345"; //this must be same password as that in polhook.cfg
//polhook will pass this to the command... this will prevent players using this as a textcmd
//in the unlikely event that players find this out change this and the password in polhook.cfg

program CharProfile(who, stringy)
	var myinput := SplitWords (stringy);
	
	if (myinput[2]!=CONCEALEDFIXPASSWORD)
		SendSysMessage(who, "Unknown command: .__CharProfile");
		return;
	endif

	var serial := CInt(myinput[1]);
	//Broadcast(serial + " " + hex(who.serial));
	if (Cint(who.serial)==serial)
		updateProfileGump(who);
	else
		DisplayProfile(who, serial);
	endif

endprogram

function DisplayProfile(who, serial)
	
	var mob := SystemFindObjectBySerial(serial);
	
	var profile := GetObjProperty(mob, "charprofile");
	if (!profile || profile ==error)
		SendSysMessage(who, "No character profile.");
		return;
	endif

	GFInitGump();
	GFPage(1);
	GFResizePic(0, 0, BKGND_SCROLL, 440, 275);

	GFTextMid(10, 10, 440, 70, who.name + " character profile");
	var textbox:=array;
	var mylines:=array;
	var words:=SplitWords(profile);
	var tempstr:=words[1];
	var i:=2;
	var linelength:=55;
	//create mylines
	while (i<=len(words))
		if(len(tempstr)+len(words[i])<linelength)
			tempstr:=tempstr+ " " +words[i];
		else
			mylines.append(tempstr);
			tempstr:=words[i];
		endif
		i:=i+1;
	endwhile	
	mylines.append(tempstr);
	
	var y:=50;
	//put out lines
	i:=1;
	while (i<=len(mylines))
		textbox.append(GFTextLine( 50, y, 1, mylines[i] ));
		y:=y+20;
		i:=i+1;
	endwhile
	GFTextLine(90, 245, 53, "Exit");	
	var exitButton := GFButtonID( 60, 250, G_BLUE_SMALL_CIRCLE_0, G_BLUE_SMALL_CIRCLE_1, 1 );

	var choice := GFSendGump(who);
	if(choice[exitButton.keyid])
		return;
	endif

endfunction


function updateProfileGump(who)
	var mycharprofile := GetObjProperty(who, "charprofile");
	if (! mycharprofile  || mycharprofile == error)
		mycharprofile:="";
	endif

	GFInitGump();
	GFPage(1);
	GFResizePic(0, 0, BKGND_SCROLL, 440, 275);

	GFTextMid(10, 10, 440, 70, who.name + " character profile");
	var textbox:=array;
	textbox.append(GFTextEntry( 50, 30, 340 , 120, 1, text := mycharprofile ));
	GFTextLine(60, 245, 53, "Update profile");
	
	GFTextLine(220, 245, 53, "Clear");
	
	GFTextLine(380, 245, 53, "Exit");

	var updateProfile:= GFButtonID( 40, 250, G_BLUE_SMALL_CIRCLE_0, G_BLUE_SMALL_CIRCLE_1, 1 );
	var clearProfile:= GFButtonID( 200, 250, G_BLUE_SMALL_CIRCLE_0, G_BLUE_SMALL_CIRCLE_1, 1 );
	var exitButton := GFButtonID( 360, 250, G_BLUE_SMALL_CIRCLE_0, G_BLUE_SMALL_CIRCLE_1, 1 );

	var choice := GFSendGump(who);
	var mystring :="";
	var tempstr;
	if(choice[updateProfile.keyid])
		foreach m in textbox
			var tempstr:=GFExtractData(m.keyid, choice);
			if (tempstr)
				mystring:=mystring + " " + tempstr;
			endif
		endforeach
		if (len(mystring) > 500)
			SendSysMessage(who, "Maximum profile length 500 characters. Cancelled",3,53);
			return;
		endif
		updateCharProfile(mystring, who);
	elseif(choice[exitButton.keyid])
		return;
	endif
	//updateProfileGump(who);
endfunction

function updateCharProfile(text, who)
	if (!ValidateCharacters(text))
		SendSysMessage(who, "Invalid characters in character profile. Cancelled.");	
		return;
	endif
	SendSysMessage(who, "Profile updated.");
	SetObjProperty(who, "charprofile", text);
endfunction

function ValidateCharacters(thestring)

	var i, validstr:={"a", ",", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", 
	"o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", 
	"2", "3", "4", "5", "6", "7", "8", "9","@","_",".","-", " ", ";",":", "'"};
	for (i := 1; i <= len(thestring); i := i + 1)
		if(!(lower(thestring[i]) in validstr))
			return 0;
		endif
	endfor
	return 1;	
endfunction
	