use npc;
use os;
use uo;

include "include/eventid";
include "include/attributes";
include "include/npcbackpacks";
include "include/npccast";
include "ai/setup/modsetup";
include "include/random";
include "include/string";
include "include/randname";
include "ai/main/npcinfo";


const HALT_THRESHOLD := 15;
const MOVING_EFFECT_FIREBALL  := 0x36d4;
const STARTHAIR := 0x2030;
const ENDHAIR := 0x2060;

var me := Self();
var masterserial := GetObjProperty( me, "master" );
var master := SystemFindObjectBySerial( masterserial );
var masterOffline := 0;
if (!master)
	master := SystemFindObjectBySerial( masterserial, SYSFIND_SEARCH_OFFLINE_MOBILES);
endif
me.setmaster( master );

var npccfg := ReadConfigFile( "npcdesc" );
var elem := FindConfigElem( npccfg, me.npctemplate );
var wepcfg := ReadConfigFile(":combat:itemdesc");
var weaponType := wepcfg [me.weapon.objtype];


var mypack := FindMyPack(me.serial);

var guarding :=0;
var saywords := 1;
var summons := 0;
var chaseloop := 0;
var caster := 0;
var spells;
var firebreather;
var poisoner;
var staying := 0;
var dragonspeak:=0;

var following := 0;
var nextwatch := ReadGameClock();

if ( me.npctemplate["dragon"] )
	dragonspeak := 1;
endif

if( me.name["<random>"] )
	SetName( me, RandomName( me ) );
endif


program TamedAI()

	if (!me.backpack)
		var newbackpack := CreateItemAtLocation(5288, 1176, 0, 0xe75,1);
		EquipItem(me, newbackpack);
	endif

	if (GetObjProperty(me, "frozen"))
		me.frozen := 1;
	endif

	SetAnchor( me.x, me.y, 20, 0 );

	if (npccfg[me.npctemplate].script == "spellkillpcs")
		caster := 1;
		spells := GetConfigStringArray( npccfg[me.npctemplate], "spell" );
		saywords := npccfg[me.npctemplate].saywords;
	elseif (npccfg[me.npctemplate].script == "firebreather")
		firebreather := 1;
	elseif (npccfg[me.npctemplate].script == "poisonkillpcs")
		poisoner := 1;
	endif

	EnableEvents( SYSEVENT_SPEECH, 12 );
	EnableEvents( SYSEVENT_ENGAGED + SYSEVENT_DAMAGED );
	EnableEvents( SYSEVENT_DOUBLECLICKED );
	EnableEvents( SYSEVENT_ITEM_GIVEN );
	EnableEvents( EVID_PEACEMADE );

	SetWarMode( 0 );
	SetObjProperty(me, "serial", me.serial);

	MainAILoop();


endprogram

function CloseDistance( opponent )

  var sleepdelay := 300 - (CInt(GetDexterity(me)) * 1.5);
  if (sleepdelay < 0) sleepdelay := 0; endif

	var weprange;
	if (!weaponType.maxrange)	
		weprange:=1;
	else
		weprange:=weaponType.maxrange;
	endif

	if( Distance( me, opponent ) <= weprange)
		return 1;
	else
		WalkToward( opponent );
		sleepms(sleepdelay);
		return 0;
	endif 

   /* case Distance( me, opponent )
        1:
        0:
            return 1;
        default:
            if(!RunToward( opponent ))
            sleepms(sleepdelay);
               return 1;
            else
               return 0;
            endif
    endcase*/

endfunction

function Fetch()

	if (me.frozen)
		return;
	endif

	var tobj := Target(master);   //object I'm supposed to get
	if (tobj.container)       
		return;
	endif

	SayOk();

/*
	var times := 0;
	while ( (Distance(me, tobj) > 1) && times < 10 && CheckLineOfSight(me,tobj) )
		if( !RunToward(tobj))
			sleepms(500);
			times := times + 1;
		else
			times := 0;
		endif
	endwhile
*/
	RunToIt(me, tobj);

	if ( (tobj.movable) && (Accessible(me,tobj)) )
		//MoveItemToContainer(tobj, mypack);
		//var result := MoveItemToContainer(tobj, me.backpack);
		var result := MoveItemToContainer(tobj, mypack);

	endif

endfunction

function drop()

	SayWhat();
	foreach myitems in EnumerateItemsInContainer(mypack)
		if (myitems.container.serial == mypack.serial)
        		MoveItemToLocation(myitems, me.x, me.y, me.z,0);
			sleepms(100);
		endif
	endforeach

endfunction

function MainAILoop()

    var ev;
    var evtext;
    var mename := lower(me.name);

    nextwatch := ReadGameClock();
    var waittime := 0;

    while (1)
        ev := os::wait_for_event( waittime );
		  look_around();
        case (ev.type)
	SYSEVENT_SPEECH:
		ProcessSpeech(ev);
	SYSEVENT_ENGAGED:
	SYSEVENT_DAMAGED:
		if (ev.source)
			Fight( ev.source );
		endif
	EVID_ALL_FOLLOW_CMD:
		following := master;
        endcase

	if (GetObjProperty(me, "#FrozenByMaster"))
		waittime := 1;
	elseif (following)
		waittime := 0;
		Follow();
	elseif (master)
		waittime := 7;
		Guard();
	else
		waittime := 120;
	endif

    endwhile

endfunction

function Guard()

	if (ReadGameClock() > nextwatch)
		if (!master.dead)
			if (CheckLineOfSight(me,master))
				if (caster && GetHp(master) < (GetMaxHp(master)/2) )
                    			CastSpell( me, master, "gheal");
					sleep(3)	;
				endif
				if (caster && master.poisoned)
					CastSpell( me, master, "cure");
					sleep(3);
				endif
			else
				if (Random(20)==1)
					TeletoMaster();
				endif
			endif
		endif
		nextwatch := ReadGameClock()+5;
		if (Random(10)==1)
			SayWhat();
		endif
	endif

endfunction

function Follow()

	if ( (me.frozen) )
		sleep(1);
		return;
	endif

	SetDexterityMod(me, 5000);
	var d := Distance( me, following );
	if (d < 2)
		sleep(1);
		chaseloop := 0;
	elseif (( d > 10 ) || ( chaseloop > 50 ))
		MoveCharacterToLocation( me, following.x, following.y, following.z,
			MOVECHAR_FORCELOCATION );
		chaseloop := 0;
		sleep(1);
	else
		RunToward(following);
		chaseloop := chaseloop + 1;
	endif

	if ( (!GetStrength(following)) || (following.dead) )
		following := 0;
	endif
	SetDexterityMod(me, 0);
	if (master)
		Guard();
	endif

endfunction

function ProcessSpeech(ev)

	if( ev.source.serial != masterserial )
		return;
	endif

	if (!master)
		RestartScript( me );
	endif

	if (me.name != master.name)
		me.name := master.name;
	endif

	SayOk();

	var evtext := lower(ev.text);
	var mename := lower(me.name);

	if( evtext[mename + " stop"] || evtext["all stop"])
		following := 0;
	elseif ((evtext[mename + " come"]) || (evtext["all come"]))
		var done := 0;
		chaseloop := 0;
		while( done == 0 )
			chaseloop := chaseloop +1;
			done := CloseDistance( ev.source );
			if (chaseloop > 25)
				done :=1;
			endif
		endwhile
	elseif (evtext["follow"])
		following  := ev.source;
	elseif (evtext["fetch"]  || (evtext["get"]))
		Fetch();
	elseif (evtext["drop"])
		drop();
	elseif (evtext[mename + " speak"]  || (evtext["all speak"]))
		SayOk();
	elseif (evtext["cure"])
		if (caster)
			CastSpell(me,master,"cure");
			sleep(3);
		else
			SayWhat();
		endif
	elseif (evtext["heal"])
		if (caster)
			CastSpell(me,master,"gheal");
			sleep(3);
		else
			SayWhat();
		endif
	elseif (evtext["light"])
		if (caster)
			CastSpell(me,master,"nightsight");
			sleep(3);
		else
			SayWhat();
		endif
	elseif (evtext["protect"])
		if (caster)
			CastSpell(me,master,"protection");
			sleep(3);
		else
			SayWhat();
		endif
	elseif (evtext["bless"])
		if (caster)
			CastSpell(me,master,"bless");
			sleep(3);
		else
			SayWhat();
		endif
	elseif (evtext["loot"])
		GrabLoot();
		return 1;
	elseif (evtext["give"])
		GiveLoot();
		return 1;
	elseif (evtext["freeze"])
		freezeMe();
	elseif (evtext["thaw"])
		thawMe();
	elseif (evtext[mename + " guard"])
		if (evtext["guard me"])
			guarding := ev.source;
			PrintTextAbove(me,"*guarding " + guarding.name + "*");
		else
			var what := Target( master, TGTOPT_HELPFUL + TGTOPT_CHECK_LOS );
			if (GetHp(what))
				guarding := what;
				PrintTextAbove(me,"*guarding " + guarding.name + "*");
			endif
		endif
	elseif (evtext["all guard"])
		if (evtext["guard me"])
			guarding := ev.source;
			PrintTextAbove(me,"*guarding " + guarding.name + "*");
		else
			var what := Target( master, TGTOPT_HELPFUL + TGTOPT_CHECK_LOS );
			if (GetHp(what))
				AllCommand(EVID_ALL_GUARD_CMD, what);
			endif
		endif
	elseif (evtext[mename + " release"] || (evtext["all release"]))
		Release();
	elseif (evtext[mename + " speak"]  || (evtext["all speak"]))
		speak();
	elseif (evtext[mename + " stay"]  || (evtext["all stay"]))
		staying := 1;
	endif

	
endfunction

function AllCommand(evtype,what)

	var mobs := ListMobilesNearLocation( master.x, master.y, master.z, 9 );
	var eve array;
	eve.+type := evtype;
	eve.+source := me;
	eve.+target := what;
	SendEvent( me, eve );
	foreach mob in mobs
		if( GetObjProperty( mob, "master" ) == me.master.serial )
			SendEvent( mob, eve );
		endif
	endforeach

endfunction

function cast_meteor()

    var targets := ListMobilesInLineOfSight(me, 3);

    foreach mobile in targets
	   var dmg := Random((CInt( CInt(GetMaxHp(me)/2.5) * GetHp(me))/GetMaxHp(me)))+5;
	   PlayMovingEffect(me, mobile,MOVING_EFFECT_FIREBALL, 10,1,1);
	   ApplyDamage(mobile, dmg);          
    endforeach

endfunction



function Fight( opponent )
	
	var targetname := opponent.name;
	var oldfollowing := following;

	SetDexterityMod(me, 0);
	following := 0;

	if ( (opponent.serial == me.serial) || (opponent.serial == master.serial) )
		return;
	endif

	TurnToward( opponent );
	SetOpponent( opponent );

	var nextbreath := ReadGameClock();
	var ev;

	var loops := 0;
	var waittime := 0;

	while ( (opponent) &&
	        not (opponent.dead || opponent.hidden || opponent.concealed) &&
	        (Distance(me,opponent) < 20) )


		if (!CloseDistance( opponent ) )
			loops := loops + 1;
			waittime := 0;
		else
			loops := 0;
			waittime := 1;
		endif

		ev := wait_for_event( waittime );

		case (ev.type)
			EVID_ALL_ATTACK_CMD:
				opponent := ev.target;
				SetOpponent( ev.target );
			EVID_ALL_FOLLOW_CMD:
				following := ev.target;
			EVID_ALL_GUARD_CMD:
				guarding := ev.target;
				PrintTextAbove(me,"*guarding " + guarding.name + "*");
			SYSEVENT_SPEECH:
				ProcessSpeech(ev);
			SYSEVENT_ENGAGED:
				if (ev.source)
					if ( (ev.source.serial != opponent.serial) && (ev.source.serial != master.serial) &&
					     (ev.source.serial != me.serial) )
						if( (!CheckLineOfSight( me, opponent )) || (Random(8)==1) )
							opponent := ev.source;
							SetOpponent( opponent );
						endif
					endif
					TurnToward( opponent );
				endif
			SYSEVENT_DAMAGED:
				criminalCheck(ev.source); // Edited by Sno, 11/2/03
				if (ev.source)
					if ( (ev.source.serial != opponent.serial) && (ev.source.serial != master.serial) &&
					     (ev.source.serial != me.serial) )
						if( (!CheckLineOfSight( me, opponent )) || (Random(8)==1) )
							opponent := ev.source;
							SetOpponent( opponent );
						endif
					endif
					TurnToward( opponent );
				endif				
			EVID_PEACEMADE:
				SetWarMode( 0 );
				opponent := 0;
				following := oldfollowing;
				return;
		endcase

		if (following)
			SetWarMode( 0 );
			opponent := 0;
			staying := 0;
			return;
		endif

		if (firebreather)
			if ( nextbreath <= ReadGameClock() )
				cast_meteor();
				nextbreath := ReadGameClock()+Random(5)+5;
			endif
		elseif (caster)
			if ( nextbreath <= ReadGameClock() )
				sleep(1);
				cast_offensive_spell(me,opponent);
				nextbreath := ReadGameClock()+Random(10)+10;
			endif
		elseif (poisoner)
			if ( nextbreath <= ReadGameClock() )
				DoPoison(opponent);
				nextbreath := ReadGameClock()+Random(10)+10;
			endif
		endif

		if ( loops > 100 )
			flee(opponent);
			return;
		endif

	endwhile

	SetWarMode( 0 );
	opponent := 0;

	foreach mob in ListHostiles( me, 9, 0 )
		Fight(mob);
		return;
	endforeach

	if ( Distance(me, master) < 8 )
		following := oldfollowing;
	else
		following := 0;
		staying := 0;
	endif

	if (dragonspeak) dragontalk("aftercombat", targetname); endif

endfunction

function SayWhat()

	if (me.graphic == 0x3a)
		PlaySoundEffect( me, 0x1d3 );//wisp
	elseif(GetObjProperty(me, "Type")=="Orc") // for goblin guard
		PlaySoundEffect( me, 0x175 );
	else
		PlaySoundEffect( me, 0x259 );//humuc
	endif

endfunction

function SayOk()

	if (me.graphic == 0x3a)
		PlaySoundEffect( me, 0x1d4 );//wisp
	
	elseif(GetObjProperty(me, "Type")=="Orc") // for goblin guard
		PlaySoundEffect( me, 0x178 );
	else
		PlaySoundEffect( me, 0x254 );//humuc
	endif

endfunction

function GiveLoot();

	if (me.frozen)
		return;
	endif

	SayWhat();
	var who := master;
	var bag := Target(who);
	if (!bag)
		return;
	endif

	if (bag.isA(POLCLASS_NPC))
		return;
	elseif (bag.acctname)
		who := bag;
	endif

	var done := 0;
	chaseloop := 0;
	while( done == 0 && chaseloop < 50 )
		chaseloop := chaseloop +1;
		done := CloseDistance( who );
	endwhile

	if (!done)
		return;
	endif

	if (bag.container.serial != who.backpack.serial)
		bag := who.backpack;
	endif

	var stackeditems := {};

	foreach item in EnumerateItemsInContainer(bag)
		if (item.amount > 1)
			stackeditems[len(stackeditems)+1]:=item.objtype;
		endif
	endforeach
	foreach item in EnumerateItemsInContainer(mypack)
		if (item.amount > 1)
			stackeditems[len(stackeditems)+1]:=item.objtype;
		endif
	endforeach

	foreach myitems in EnumerateItemsInContainer(mypack)
		if (myitems.container.serial == mypack.serial)
			if ( ( myitems.objtype in stackeditems ) )
				if (CreateItemInContainer( bag, myitems.objtype, myitems.amount ))
					DestroyItem(myitems);
					sleepms(100);
				else
					return;
				endif
			else
				if ( MoveItemToContainer(myitems, bag) )
					sleepms(100);
				else
					return;
				endif
			endif
		endif
	endforeach


endfunction

function GrabLoot()

	var numitems := 0;
	if (!GetObjProperty(me,"serial"))
		SetObjProperty(me, "serial", me.serial);
	endif

	if (me.frozen)
		return;
	endif

	var near_items := ListItemsNearLocation(me.x, me.y, me.z, 6);

	foreach item in near_items
		if( CheckLineOfSight( me, item ) )
			if (!canloot(item))
				continue;
			endif
			if ( (item.movable) && ((item.objtype < STARTHAIR || item.objtype > ENDHAIR))  )
				RunToIt(me,item);
				if ( (Distance(me, item) < 2) && (MoveItemToContainer(item, mypack)) )
					say( "*yoink*" );
					sleep(1);
				else
					return;
				endif

			elseif (item.isA(POLCLASS_CORPSE))
				var items := EnumerateItemsInContainer(item);
				if (len(items))
					RunToIt(me,item);
					if (Distance(me, item) < 2)
						foreach thingie in items
							if (thingie.objtype < STARTHAIR || thingie.objtype > ENDHAIR)
						    		if (thingie.container.serial == item.serial)
									if ( MoveItemToContainer(thingie, mypack) )
										say( "*yoink*" );
										sleep(1);
									endif
								endif
							endif
						endforeach
					else
						return;
					endif
				endif
			endif
		endif
	endforeach

endfunction

function RunToIt(me,item)

	var numsteps;
	for (numsteps := 0; numsteps < 6; numsteps := numsteps +1)
		if ( Distance(me, item) < 2 )
			return;
		else
			RunToward(item);
		endif
	endfor

endfunction

function TeletoMaster();

	if (me.frozen)
		return;
	endif

	master := SystemFindObjectBySerial( masterserial );
	if (master)
		me.hidden := 0;
		say("Kal Ort Por");
		PlaySoundEffect( me, SFX_210 );
		sleepms(250);
		MoveCharacterToLocation( me, master.x, master.y, master.z, MOVECHAR_FORCELOCATION );
		following := master;
		PlaySoundEffect( me, SFX_SPELL_RECALL );
	endif

endfunction

// Loot functions

function canloot( item )
	if( IsInAntiLootingArea(me) )
		return 0;
	endif

	if (item.isA(POLCLASS_CORPSE))
		var serial := GetObjProperty( item, PROPID_CORPSE_CORPSE_OF );
		if( !serial )
			return 1;
		elseif( GetObjProperty( item, PROPID_CORPSE_IS_BLUE ) && (serial!=master.serial) )
			me.setCriminal(1);
			master.setCriminal(1);
			return AddLooter( master, item );
		endif
	endif

	return 1;

endfunction

function AddLooter( looter, object )
	var looters := GetObjProperty(object, PROPID_CORPSE_LOOTED_BY);
	if( !looters )
		looters := dictionary;
	endif

	if( !looters.exists(looter.serial) )
		looters[looter.serial] := looter.name;
		return SetObjProperty(object, PROPID_CORPSE_LOOTED_BY, looters);
	else
		return 1;
	endif
endfunction

function freezeMe()
	set_critical(1);
	
	if (!me.frozen)
		me.frozen := 1;
		PrintTextAbovePrivate(me, "Your follower is now frozen in place.", master);
		SetObjProperty(me, "#FrozenByMaster", 1);
	endif
	
	set_critical(0);
endfunction

function thawMe()
	set_critical(1);

	if (me.frozen && GetObjProperty(me, "#FrozenByMaster"))
		me.frozen := 0;
		PrintTextAbovePrivate(me, "Your follower is now moving freely.", master);
		EraseObjProperty(me, "#FrozenByMaster");
	endif
	
	set_critical(0);
endfunction

// attacker is someone who has damaged it (not necessarily started the fight)
function criminalCheck(attacker)
	if( !master.cmdlevel )
		var guild1 := GetObjProperty( master, "guild_id" );
		if( guild1 )
			var guild2 := GetObjProperty( attacker, "guild_id" );
			if( guild2 )
				if( guild1 == guild2 )
					return;
				else
					guild1 := FindGuild( guild1 );
					guild2 := FindGuild( guild2 );
					if( guild1.IsEnemyGuild(guild2) )
						return;
					elseif( guild1.IsAllyGuild(guild2) )
						return;
					endif
				endif
			endif
		endif
	
		if( !master.criminal )
			// Set criminal only if the the master is not a criminal
			attacker.SetCriminal(1);
		endif
	endif
endfunction

function DoPoison( you )

	if ( (Distance(me,you)<2) && (Random(8)==1) )

		var p_level := Random(CInt(GetMaxHp(me)/20));
		if (p_level > 3) p_level := 3; endif
		SetPoison(you, p_level, "You have been poisoned by " + me.name +"!");

	endif

endfunction

function flee(opponent)

	var numflees := GetObjProperty(me,"#flees");

	if (numflees)
		if ( numflees > 5 )
			EraseObjProperty(me,"#flees");
			var totem := CInt(GetObjProperty( me, "totem" ));
			if (totem)
				sleep(30);
				return;
			else
				MoveCharacterToLocation(me,5288,1176,0,MOVECHAR_FORCELOCATION);
				RevokePrivilege( me, "invul" );
				SetObjProperty(me,"guardkill",1);
				Damage( me, GetMaxHp(me) + 3 );
			endif
		else
			numflees := numflees + 1;
		endif
	else
		numflees := 1;
	endif

	SetObjProperty(me,"#flees",numflees);

	var runs := 0, sleepdelay;
	while ( (Distance(me, opponent) < 20) && (runs < 50) )
	  sleepdelay := 300 - (CInt(GetDexterity(me)) * 1.5);
	  if (sleepdelay < 0) sleepdelay := 0; endif

		RunAwayFrom(opponent);
		sleepms(sleepdelay);
		runs := runs +1;
		wait_for_event(0);
	endwhile

	RestartScript( me );

endfunction

function dragontalk(responsekey, targetname)

	if (Random(3)!=1) return; endif

	targetname := truncatearticle(targetname);
	var speachfile := ReadConfigFile( ":dundee:dragonspeak" );
	if (!speachfile) return; endif
	var elem := FindConfigElem( speachfile, responsekey );
	if (!elem) return; endif
	var responses := GetConfigStringArray(elem,"response");
	if (!responses) return; endif
	var response := responses[ Random(len(responses))+1 ];
	response["mastername"] := master.name;
	response["targetname"] := targetname;

	say(response);

endfunction

function look_around()

	foreach critter in ListMobilesInLineOfSight( me, HALT_THRESHOLD )
		if (critter.npctemplate && IsHostile(critter) &&  critter.script != "tamed")
			Fight( critter );
		endif
	endforeach

	var hiders := ListMobilesNearLocationEx( me.x, me.y, me.z, HALT_THRESHOLD, LISTEX_FLAG_HIDDEN );
	if( len(hiders) )
		foreach mobile in hiders
			var hiding := GetEffectiveSkill( mobile, SKILLID_HIDING );
			if( !mobile.npctemplate || mobile.script == "tamed")
				if( CheckSkill( me, SKILLID_DETECTINGHIDDEN, CInt(hiding), CInt(hiding*20) ) )
					mobile.hidden := 0;
					Fight( mobile );
					break;
				endif
			endif
		endforeach
	endif

endfunction

function Release()
		say("*Argh*");
		PlayStationaryEffect( me.x, me.y, me.z, FX_SMOKE, 0xa, 0xa );
		MoveCharacterToLocation(me,5288, 1176, 0,MOVECHAR_FORCELOCATION);
		RevokePrivilege( me, "invul" );
		ApplyRawDamage( me, GetHp(me) + 3 );
endfunction

function speak()
	var sound_number := npccfg[me.npctemplate].attackhitsound;
	PlaySoundEffect( me, sound_number );

endfunction
