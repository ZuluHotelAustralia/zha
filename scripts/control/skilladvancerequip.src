use uo;
use os;
use cfgfile;

include "include/spelldata";
include "include/attributes";
include "include/client";
include "include/namingbyenchant";
include "include/constants/settings";
include "include/setarmour";
include "../pkg/std/housing/utility";
include "include/classes";

const APPRENTICE_SKILL := 1;
const JOURNEYMAN_SKILL := 2;
const EXPERT_SKILL     := 3;
const ADEPT_SKILL      := 4;
const MASTER_SKILL     := 5;
const GM_SKILL         := 6;

program equip( who, it )
	fixEquipment(it);
	var equipslots;
        var itemes;
	if( IsInForbiddenContainer(who, it) )
		SendSysMessage(who, "You can't equip that object from there.");
		return 0;
	endif

	if( GetObjProperty( it, "auctionview" ) )
		PunishForBugAbusing(who,it);
		return 0;
	endif

	if( it.objtype == 0x86ef || it.objtype == 0x86df || (!(who.cmdlevel || who.isA(POLCLASS_NPC))) && GetObjProperty( it, "noloot" ) )
		start_script( ":shilitems:itemdestroyer", it );
		return 0;
	endif

	if( GetEquipmentByLayer( who, LAYER_HAND2 ).objtype == 0xba28 ||
		GetEquipmentByLayer( who, LAYER_ROBE ).objtype == 0xba29 )
		SendSysMessage( who, "You can't equip that while wearing ritual clothes!" );
		return 0;
	endif
	
	if (GetObjProperty(it, "EnhancedBy") && it.isa(POLCLASS_ARMOR))
		for i:=3 to 28    // all equip layers except hands
			if (GetObjProperty(GetEquipmentByLayer(who, i), "EnhancedBy"))
				SendSysMessage(who, "You can't equip two enhanced armours!");
				return 0;
			endif
		endfor
	endif
	
	if (GetObjProperty(who, "disarmed") && it.isa(POLCLASS_WEAPON))
		SendSysMessage(who, "You fumble about for a weapon...");
		return 0;
	endif

	if( it.objtype == 0x204f )
		if (!EquipStaffRobe( who, it ))
			return 0;
		endif
	elseif ( it.objtype == 0x204e )
		if (!DeathShroudMod( who, it ))
			return 0;
		endif
	endif

	if( GetObjProperty( it, "StayEquipped" ) && (GetObjProperty( it, "Cursed" )))
		EraseObjProperty( it, "StayEquipped" );
		return 1;
	endif

	if( !who.cmdlevel && !who.npctemplate )
		if ( IsProhibitedClasseItem(who, it))
			SendSysMessage( who, "You do not possess the power to wield this item.");
			UndoImmunity(who, it);
			UndoProt(who, it);
			return 0;
		endif
	
		if( IsProhibitedByClasse( who, it ))
			SendSysMessage( who, "Your specialisation prevents you from equipping this." );
			UndoImmunity( who, it );
			UndoProt( who, it );
			return 0;
		endif

		if( IsProhibitedByRace(who, it))
			SendSysMessage(who, "Your race prevents you from equipping this.");
			UndoImmunity(who, it);
			UndoProt(who, it);
			return 0;
		endif
  
                if (who.ip && !who.cmdlevel) // only do this if player is online
                  equipslots:=GetObjProperty(who, "equipslots");

                  if (!equipslots)
                     equipslots:=0;
                  endif
                  itemes:=CalculateEquipSlots(who, it);
                  if (itemes + equipslots > GetMaxEquipSlots(who))
                        SendSysMessage(who, "This item has too many enchantments for you to equip");
                        UndoImmunity(who, it);
                        UndoProt(who, it);
                        return 0;
                  endif
                endif
	endif
	
	if (GetObjProperty( it, "WasCursed" ))
		EraseObjProperty( it, "WasCursed" );
	endif

	if ( NotYours(who,it) )
		return 0;
	endif

	if (!it.name)
		SetName(it, it.desc);
	endif
	
	if (GetObjProperty(it, "Cursed") == 1)
		ApplyCurse( who, it );
		itemes:=0;
	endif

	if (!it.hitscript)
		AssignHitScript(it);
	endif

	//DoSetEquipment(who, it);
	DoSkillAdvance( who, it);
	DoStatMods( who, it);
	//DoRegenMods( who , it );
	DoArMods( who, it );
	//DoEquipSpell( who , it);
	DoImmunity( who, it );
	DoProt( who, it );
        
        if (!who.cmdlevel && who.ip)
           equipslots:= equipslots + itemes;
           SetObjProperty(who, "equipslots", equipslots);
        endif
	if (GetObjProperty( it, "OfBlackrock" ) )
		SetMana(who, 0);
	endif

	SetObjProperty( it, "EquippedAlready", 1 );
	SetObjProperty( it, "LastEquippedBy", who.name);

	return 1;

endprogram


function NotYours(who,it)

	var ownerserial := GetObjProperty(it, "ownerserial");
	var ownername;
	if (ownerserial)
		ownername := GetObjProperty(it, "ownername");
	else
		return 0;
	endif


	if (who.isA(POLCLASS_NPC))
		var master := GetObjProperty(who, "master");
		if  ( ownerserial != master )
			PrintTextAbovePrivate( who,"I can't use that, it belongs to "+ownername, who );
			start_script( ":shilitems:itemreturner", it );
			return 1;
		else
			return 0;
		endif
	endif

	if  ( ownerserial != who.serial )
		SendSysMessage(who,"You can't use that, it belongs to "+ownername );
		start_script( ":shilitems:itemreturner", it );
		return 1;
	endif

	return 0;

endfunction


function DoStatMods(who,it)

	if ( GetObjProperty(it,"str") )
		SetStrengthMod(who, GetStrengthMod(who) + CInt(GetObjProperty(it,"str")));
	endif
	if ( GetObjProperty(it,"int") )
		SetIntelligenceMod(who, GetIntelligenceMod(who) + CInt(GetObjProperty(it,"int")));
	endif
	if ( GetObjProperty(it,"dex") )
		SetDexterityMod(who, GetDexterityMod(who) + CInt(GetObjProperty(it,"dex")));
	endif
	if ( GetObjProperty(it,"DefaultDex") )
		SetDexterityMod(who, GetDexterityMod(who) + CInt(GetObjProperty(it,"DefaultDex")));
	endif

endfunction


function DoSkillAdvance(who,it)
	var skillnum := GetObjProperty(it,"skilladv");

	if( skillnum && GetObjProperty( it, "EquippedAlready" ))
		if(!GetSkillTemporaryMod(who, skillnum))
			return;
		endif
	endif

	if ( (skillnum) || (skillnum == 0) )

		var power    := CInt(GetObjProperty( it, "skilladvamount" ));
	
		var skillval := GetEffectiveSkillBaseValue(who, skillnum);

		// Apply Dividers
		var multiplier := CInt( GetObjProperty( it, "SpecMult" ) );
		if( multiplier )
			power := CInt( power / multiplier );
		elseif(it.isa(POLCLASS_WEAPON))
			power := CInt(power / 5);
		endif

		var skillcap;
		case( power )
			APPRENTICE_SKILL:
				skillcap := SETTING_MAX_SKILL_FOR_SKILL_ITEM_LEVEL1;
				break;
			JOURNEYMAN_SKILL:
				skillcap := SETTING_MAX_SKILL_FOR_SKILL_ITEM_LEVEL2;
				break;
			EXPERT_SKILL:
				skillcap := SETTING_MAX_SKILL_FOR_SKILL_ITEM_LEVEL3;
				break;
			ADEPT_SKILL:
				skillcap := SETTING_MAX_SKILL_FOR_SKILL_ITEM_LEVEL4;
				break;
			MASTER_SKILL:
				skillcap := SETTING_MAX_SKILL_FOR_SKILL_ITEM_LEVEL5;
				break;
			GM_SKILL:
				skillcap := SETTING_MAX_SKILL_FOR_SKILL_ITEM_LEVEL6;
				break;
			default:
				skillcap := 60000;
		endcase

		// Apply Multipliers
		if( multiplier )
			power := CInt( power * multiplier );
		elseif(it.isa(POLCLASS_WEAPON))
			power := power * 5;
		endif

		power := power * 10;

		if(power>0)
			if((power + skillval) > skillcap)
				power := skillcap - skillval;
			endif
			if(power < 0)
				power := 0;
			endif
		else
			if((power + skillval) < 0)
				power := -skillval;
			endif
		endif

		//AlterSkillTemporaryMod( who, skillnum, power);
		
		AlterSkillTemporaryModBaseValue(who, skillnum, power); // tenths!
		
		SetObjProperty(who, ("currskbv" + Cstr(it.serial)), power);
		// I changed the CProp name a bit. bv (base value) is appended to the currsk. This is so old currsk cprops
		// can still be handled properly.
		
		var level;
               /*
		foreach classe in GetClasseIds()
			EraseObjProperty( who, classe );
			level := IsFromThatClasse( who, GetClasseSkills(classe) );
			if( level )
				SetObjProperty( who, classe, level );
				break;
			endif
		endforeach
                */
                SetClasse(who);
	endif

endfunction


function DoRegenMods( who, item )

	if( GetObjProperty( item, "EquippedAlready" ) )
		return 1;
	endif

	var hp := GetObjProperty( item, "HpRegen" );
	if( hp )
		if( GetObjProperty( who, "baseregen" ) )
			SetObjProperty( who, "baseregen", GetObjProperty( who, "baseregen" ) + hp );
		else
			SetObjProperty( who, "baseregen", hp );
		endif
		SetHpRegenRate(who , ( GetHpRegenRate(who) + hp) * 12);
	endif

	var mana := GetObjProperty( item, "ManaRegen" );
	if( mana )
		if( GetObjProperty( who, "basemanaregen" ) )
			SetObjProperty( who, "basemanaregen", GetObjProperty( who, "basemanaregen" ) + mana );
		else
			SetObjProperty( who, "basemanaregen", mana );
		endif
		SetManaRegenRate(who , ( GetManaRegenRate(who) + mana) * 12);
	endif

	var stamina := GetObjProperty( item, "StamRegen" );
	if( stamina )
		if( GetObjProperty( who, "basestamregen" ) )
			SetObjProperty( who, "basestamregen", GetObjProperty( who, "basemanaregen" ) + stamina );
		else
			SetObjProperty( who, "basestamregen", stamina );
		endif
		SetStaminaRegenRate(who , ( GetStaminaRegenRate(who) + stamina) * 12);
	endif

endfunction

		
function DoEquipSpell(who,it)

	var spellname := GetObjProperty(it,"equipspell");
	if ( spellname )
		var parms := { };
		parms[1] := who;
		parms[2] := it;
		parms[3] := ReadGameClock();
		SetObjProperty(it,"equiptime",parms[3]);
		start_script(":magic:"+spellname, parms);
	endif

endfunction


function DeathShroudMod(who, it)

	if (!who.dead && !(who.cmdlevel || who.isA(POLCLASS_NPC)))
		start_script( ":shilitems:itemdestroyer", it );
		return 0;
	elseif (it.objtype == 0x204e)
		it.graphic := 0x204e;
	endif
	
	return 1;

endfunction


function ApplyCurse( who, item )

	RevealCurse( item );
	PlaySoundEffect( who, SFX_SPELL_CURSE);
	PlayObjectCenteredEffect( who, FX_SPELL_CURSE, SPEED_SPELL_CURSE, LOOP_SPELL_CURSE );
	SendSysMessage(who, "That item is cursed, and reveals itself to be a " + item.desc);

endfunction


function AssignHitScript(it)

	var weaponcfg := ReadConfigFile(":*:itemdesc");
	var hitscript := weaponcfg[it.objtype].hitscript;
	if( hitscript )
		it.hitscript := hitscript;
	endif

endfunction


function DoProt( who, item )

	if( GetObjProperty( item, "EquippedAlready" ) )
		return 1;
	endif

	var possibles := { "PoisonImmunity",
			     "MagicImmunity",
			     "SpellReflect" };
			
			
	foreach prot in possibles
		if( GetObjProperty( item, prot ) )
			SetObjProperty( who, prot, item.serial );
		endif
	endforeach

	return 1;

endfunction


function DoImmunity( who, item )

	if( GetObjProperty( item, "EquippedAlready" ) )
		return 1;
	endif

	var possibles := { "PermPoisonImmunity",
			     "PermMagicImmunity",
			     "Permmr",
			     "FireProtection",
			     "WaterProtection",
			     "AirProtection",
			     "EarthProtection",
			     "FreeAction",
			     "NecroProtection",
			     "AcidProtection",
			     "HolyProtection",
			     "PhysicalProtection",
			     "HealingIncrease" };



	var level;

	foreach prot in possibles
		level := CInt( GetObjProperty( item, prot ) );
		if( level )
			if( CInt(GetObjProperty( who, prot )) < level )
				SetObjProperty( who, prot, level );
			endif
		endif
	endforeach

	return 1;

endfunction


function EquipStaffRobe( who, item )

	var playerlevel := who.cmdlevel;

	case( who.cmdlevel )
		0:	start_script( ":shilitems:itemdestroyer", item );
			return 0;
		
		1:	item.color := 0x0492;
			SetBaseStrength(who, 6000);
			SetBaseDexterity(who, 6000);
			SetBaseIntelligence(who, 6000);
			return 1;
		
		2:	item.color := 0x0487;
			SetBaseStrength(who, 6000);
			SetBaseDexterity(who, 6000);
			SetBaseIntelligence(who, 6000);			
			return 1;
		
		3:	if( GetObjProperty( who, "head" ) )
				SetBaseStrength(who, 6000);
				SetBaseDexterity(who, 6000);
				SetBaseIntelligence(who, 6000);
				item.color := 0x050f;
			else
				SetBaseDexterity(who, 6000);
				SetBaseIntelligence(who, 6000);
				SetBaseStrength(who, 6000);
				item.color := 0x0494;
			endif
			return 1;
		
		4:	if( GetObjProperty( who, "head" ) )
				SetBaseStrength(who, 6000);
				SetBaseDexterity(who, 6000);
				SetBaseIntelligence(who, 6000);
				item.color := 0x0498;
			else
				SetBaseStrength(who, 6000);
				SetBaseDexterity(who, 6000);
				SetBaseIntelligence(who, 6000);
				item.color := 0x0485;
			endif
			return 1;

		5:	if( GetObjProperty( who, "head" ) )
				SetBaseStrength(who, 6000);
				SetBaseDexterity(who, 6000);
				SetBaseIntelligence(who, 6000);	
				item.color := 0x0486;
			else
				SetBaseStrength(who, 6000);
				SetBaseDexterity(who, 6000);
				SetBaseIntelligence(who, 6000);	
				item.color := 0x0496;
			endif
			return 1;

	endcase

	start_script( ":shilitems:itemdestroyer", item );
	return 0;

endfunction


function DoArMods( who, item )

	var ar := CInt(GetObjProperty( item, "ArBonus" ));
	if( ar )
		who.ar_mod := who.ar_mod + ar;
	endif

endfunction


function UndoImmunity( who, item )

	var possibles := { "PermPoisonImmunity",
			     "PermMagicImmunity",
			     "Permmr",
			     "FireProtection",
			     "WaterProtection",
			     "AirProtection",
			     "EarthProtection",
			     "FreeAction",
			     "NecroProtection",
			     "HolyProtection",
			     "PhysicalProtection",
			     "HealingIncrease",
                             "AcidProtection"
                              };



	var level;
	var max := struct;
	max.+item := 0;
	max.+lvl  := 0;

	foreach prot in possibles
		level := CInt( GetObjProperty( item, prot ) );
		if( level )
			EraseObjProperty( who, prot );
			foreach thing in ListEquippedItems( who )
				if( item != thing )
					level := CInt( GetObjProperty( thing, prot ) );
					if( level > max.lvl )
						max.item := thing;
						max.lvl  := level;
					endif
				endif
			endforeach
		
			if( max.item )
				SetObjProperty( who, prot, max.lvl );
			endif
		
			max.item := 0;
			max.lvl  := 0;
		endif
	endforeach

	return 1;

endfunction


function UndoProt( who, item )

	var possibles := { "PoisonImmunity",
			     "MagicImmunity",
			     "SpellReflect" };
			
			
	foreach prot in possibles
		if( GetObjProperty( item, prot ) )
			if( GetObjProperty( who, prot ) == item.serial )
				EraseObjProperty( who, prot );
				foreach thing in ListEquippedItems( who )
					if( GetObjProperty( thing, prot ) )
						if( thing != item )
							SetObjProperty( who, prot, thing.serial );
							break;
						endif
					endif
				endforeach
			endif
		endif
	endforeach

	return 1;

endfunction


function RefreshQuality( item )

	if( GetObjProperty( item, "IsExceptional" ) )
		return 1;
	endif

	var cfg := ReadConfigFile( ":blacksmithy:blacksmithy" );
	var ore := GetObjProperty( item, "ForgedWith" );
	var new := CDbl( cfg[ore.objtype].quality );
	if( !new )
		return 1;
	endif

	if( item.quality > new )
		item.quality := new;
		if( item.hp > item.maxhp )
			item.hp := item.maxhp;
		endif
	endif

endfunction


function PunishForBugAbusing( who, it )

	SendSysMessage( who, "You'll be punished for using auction duping bug." );
	PlayLightningBoltEffect(who);

	var name	:= who.name;
	var account	:= who.acctname;

	who.title_race := "bug abuser";
	SetBaseSkill( who, RandomInt(49), 0 );
	var skillnum := GetObjProperty(it,"skilladv");
	if( (skillnum) || (skillnum == 0) )
		SetBaseSkill( who, skillnum, 0 );
	endif

	foreach mobile in EnumerateOnlineCharacters()
		if( mobile.cmdlevel )
			SendSysMessage( mobile,
					name + " account: " + account + " abused the auction duping bug and was punished for it.",
					3,
					33 );
		endif
	endforeach

	return 1;

endfunction

// Makes changes to existing equipment.
function fixEquipment(item)
	var madefrom := GetObjProperty(item, "ForgedWith");
	case (madefrom)
		0xC527: // These 3 are the gem armours.
		0xC528:
		0xC529:	EraseObjProperty(item, "PermMagicImmunity");
			return;
	endcase
	
	case(item.objtype)
		0x7591: // Water armour
		0x7592:
		0x7593:
		0x7594:
		0x7595:
		0x7596:
		0x7597:
		0x7598:
		0x7599:
		0x759A:
		0x759B:
		0x75a0: SetObjProperty(item, "WaterProtection", 1);
			break;
		0xF075: // Air armour
		0xF076:
		0xF077:
		0xF078:
		0xF079:
		0xF080:
		0xF081:
		0xF082:
		0xF083:
		0xF084:
		0xF085:
		0xF086: SetObjProperty(item, "AirProtection", 1);
			break;
		0xF097: // Fire
		0xF098:
		0xF099:
		0xF100:
		0xF101:
		0xF102:
		0xF103:
		0xF104:
		0xF105:
		0xF106:
		0xF107:
		0xF108: SetObjProperty(item, "FireProtection", 1);
			break;
		0xF119: // Shadow
		0xF120:
		0xF121:
		0xF122:
		0xF123:
		0xF124:
		0xF125:
		0xF126:
		0xF127:
		0xF128:
		0xF129:
		0xF130: SetObjProperty(item, "NecroProtection", 1);
			break;
		0xF141: // Poison
		0xF142:
		0xF143:
		0xF144:
		0xF145:
		0xF146:
		0xF147:
		0xF148:
		0xF149:
		0xF150:
		0xF151:
		0xF152: SetObjProperty(item, "PermPoisonImmunity", 1);
			break;
		0xF042: // Earth
		0xF043:
		0xF044:
		0xF045:
		0xF046:
		0xF047: 
		0xF049:
		0xF050:
		0xF051:
		0xF052:
		0xF053:
		0xF054: SetObjProperty(item, "EarthProtection", 1);
			break;
	endcase
endfunction

function IsProhibitedByRace(who, it)

	var itemrace := GetObjProperty (it, "RaceSpecific");
	if (!itemrace)
		return 0;
	endif

	if (itemrace != who.title_race)
		return 1;
	endif
	return 0;

endfunction

function IsInForbiddenContainer(who, it)
	var container := it.container;
	
	while (container)
		if (container.objtype == 0x2006) // is it a corpse?
			var serial := GetObjProperty( container, PROPID_CORPSE_CORPSE_OF );
			if( who.cmdlevel )
				return 0;
			elseif( serial == who.serial )
				return 0;
			else
				return 1;
			endif
		endif
		
		var houseSerial := GetObjProperty(container, "houseserial");
		if ( houseSerial )
			var boxs := GetObjProperty(container, "boxserial");
			if (boxs)
				var box := SystemFindObjectBySerial(boxs);
				SetObjProperty(box, "houseserial", houseSerial);
				container := box;
			endif
		
			var house := SystemFindObjectBySerial(houseSerial);
			if (house)
				if (IsOwner(who, house) || IsFriend(who, house))
					return 0;
				else
					return 1;
				endif	
			endif
		else
			container := container.container;
		endif
	endwhile
	
	return 0;
endfunction
