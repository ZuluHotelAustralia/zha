name: Build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Install latest ecompile
      run: |
        wget -q https://github.com/polserver/polserver/releases/download/NightlyRelease/Nightly-Linux-clang.zip
        unzip Nightly-Linux-clang.zip
        rm -f *_dbg.zip
        rm -f Nightly-Linux-clang.zip
        unzip -j -o *.zip
        cp ecompile scripts/
        cp *.em scripts/
        echo "ModuleDirectory=scripts" >>scripts/ecompile.cfg
        echo "IncludeDirectory=scripts" >>scripts/ecompile.cfg
        echo "PolScriptRoot=scripts" >>scripts/ecompile.cfg
        echo "PackageRoot=pkg" >>scripts/ecompile.cfg
        echo "DisplaySummary=1" >>scripts/ecompile.cfg
        echo "DisplayWarnings=1" >>scripts/ecompile.cfg
        echo "CompileAspPages=1" >>scripts/ecompile.cfg
    - name: Compile
      run: |
        scripts/ecompile -A -T
    - name: Create compiled script archive
      run: |
        tar -czvf ecl-archive.tgz `find . | egrep ".*\.ecl"`
    - name: Upload live update package
      if: github.ref == 'refs/heads/live-updates'
      uses: actions/upload-artifact@v1
      with:
        name: ecl-archive-${{ github.sha }}
        path: ecl-archive.tgz
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: zuluhotelaustralia/zha/server
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com


  # notify_on_failure:
  #   needs: main
  #   runs-on: "ubuntu-latest"
  #   if: failure()
  #   steps:
  #     - name: Discord notification failure
  #       env:
  #         DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
  #       uses: turleypol/actions-status-discord@master
  #       with:
  #         status: failure
  #         job: Build
  #         nofail: false
  # notify_on_success:
  #   needs: main
  #   runs-on: "ubuntu-latest"
  #   if: success()
  #   steps:
  #     - name: Discord notification success
  #       env:
  #         DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
  #       uses: turleypol/actions-status-discord@master
  #       with:
  #         status: success
  #         job: Build
  #         nofail: false
  # notify_on_cancel:
  #   needs: main
  #   runs-on: "ubuntu-latest"
  #   if: cancelled()
  #   steps:
  #     - name: Discord notification cancelled
  #       env:
  #         DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
  #       uses: turleypol/actions-status-discord@master
  #       with:
  #         status: cancelled
  #         job: Build
  #         nofail: false